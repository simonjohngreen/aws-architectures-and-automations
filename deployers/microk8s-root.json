{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Root Stack for microk8s, this stack calls all other stacks and outputs how to connect when complete",
    "Parameters": {
        "AvailabilityZone1": {
            "Description": "AWS Availability Zone One",
            "Type": "String",
            "Default": "eu-west-1a"
        },
        "AvailabilityZone2": {
            "Description": "AWS Availability Zone Two",
            "Type": "String",
            "Default": "eu-west-1b"
        },
        "AvailabilityZone3": {
            "Description": "AWS Availability Zone Three",
            "Type": "String",
            "Default": "eu-west-1c"
        },
        "VPCCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for entire management control VPC.",
            "Default": "100.72.100.0/22",
            "Type": "String"
        },
        "PublicSubnetCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block for the NAT GW parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the public subnet",
            "Default": "100.72.103.0/24",
            "Type": "String"
        },
        "PrivateSubnetCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the private subnet AZ1",
            "Default": "100.72.100.0/24",
            "Type": "String"
        },
        "PrivateSubnetCIDR2": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the private subnet AZ2",
            "Default": "100.72.101.0/24",
            "Type": "String"
        },
        "PrivateSubnetCIDR3": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the private subnet AZ3",
            "Default": "100.72.102.0/24",
            "Type": "String"
        },
        "SiteName": {
            "Description": "Site Name",
            "Type": "String",
            "Default": "microk8s"
        },
        "VPCDOMAIN": {
            "Description": "VCP domain type",
            "Type": "String",
            "Default": "default"
        },
        "microk8sInstanceType": {
            "Description": "microk8s node Instance Type",
            "Type": "String",
            "Default": "m5.2xlarge"
        },
        "KeyName": {
            "Description": "SSH Key Name",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "ContrailKey"
        },
        "ContainerRegistryTag": {
            "Description": "Container Registry Tag",
            "Type": "String",
            "Default": "2008.121"
        },
        "ContainerRegistryUserName": {
            "Description": "Container Registry User Name",
            "Type": "String"
        },
        "ContainerRegistryPassword": {
            "Description": "Container Registry User Password",
            "Type": "String",
            "NoEcho": true
        },
        "BastionInstanceType": {
            "Description": "Contrail Bastion Instance Type",
            "Type": "String",
            "Default": "m4.2xlarge"
        },
        "ContrailBastionPrivateSNGatewayIP": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "parameter must be in the form x.x.x.x",
            "Description": "Private Network Gateway IP used by Contrail Bastion to reach the other nodes",
            "Default": "100.72.100.1",
            "Type": "String"
        },
        "DeployContrailBastion": {
            "Description": "if true we will deploy contrail bastion",
            "Type": "String",
            "Default": "true"
        },
        "ContrailBastionAZ1PublicIP": {
            "Description": "Contrail Bastion public static IP",
            "Type": "String",
            "Default": "100.72.103.10"
        },
        "ContrailBastionAZ1PrivateIP": {
            "Description": "Contrail Bastion private static IP",
            "Type": "String",
            "Default": "100.72.100.10"
        },
        "UserLocation" : {
            "Description": "The IP address range that can be used for OAM access to CC and if running HA the load balancer, both on internet. Typically your laptop /32. If left blank we will add 0.0.0./0 and allow ssh from anywhere",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "0.0.0.0/0",
            "ConstraintDescription": "Put your Client IP here x.x.x.x/32, if you leave it blank then 0.0.0.0/0 will be populated and the internet will be able access your deployments UI and SSH"
        },
        "SGSubnet1": {
            "Description": "AN IP address range allowed in security to point towards the cluster.",
            "Type": "String",
            "Default": "100.73.100.0/23"
        },
        "SGSubnet2": {
            "Description": "AN IP address range allowed in security to point towards the controller cluster. Leave it blank if you do not want it populated",
            "Type": "String",
            "Default": "100.73.101.0/23"
        },
        "SGSubnet3": {
            "Description": "AN IP address range allowed in security to point towards the controller cluster. Leave it blank if you do not want it populated",
            "Type": "String",
            "Default": "100.73.102.0/23"
        },
        "SGSubnet4": {
            "Description": "AN IP address range allowed in security to point towards the controller cluster. Leave it blank if you do not want it populated",
            "Type": "String",
            "Default": "100.73.103.0/23"
        },
        "SiteName": {
            "Description": "Site Name",
            "Type": "String",
            "Default": "microk8s"
        },
        "SSHPassword": {
            "Description": "SSH Password",
            "Type": "String",
            "Default": "EfrtGF5EDF_d54ERrf",
            "NoEcho": true
        },
        "ContrailPassword": {
            "Description": "Contrail Bastion Password",
            "Type": "String",
            "NoEcho": "True",
            "Default": "contrail123"
        },
        "k8sPodBaseIP": {
            "Description": "Used as the base addess for the POD IPAM, the host ip last digit is transposed into the third digit to ensure the subnet is unique per instance",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "10.32.0.0/24"
        },
        "k8sServiceBaseIP": {
            "Description": "Used as the base addess for the POD IPAM, the host ip last digit is transposed into the third digit to ensure the subnet is unique per instance",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "10.96.0.0/24"
        },
        "k8sFabricBaseIP": {
            "Description": "Used as the base addess for the Fabric IPAM, the host ip last digit is transposed into the third digit to ensure the subnet is unique per instance",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "10.97.0.0/24"
        },
        "k8sFabricSN": {
            "Description": "The subnet vrouters are allowed to accept tunnels on. this is proabably your VPC subnet. It ends up in config->global parameter->Fabric Subnets",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "100.72.100.0/22"
        },
        "k8sBaseASN": {
            "Description": "The controller ASN base, 4-bytes, the host ip last digit is added to this in order to create a unique ASN per instances",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "10",
            "Default": "63000"
        },
        "k8sVersion": {
            "Description": "Kubernetes version to install, default is 1.18.9",
            "Type": "String",
            "Default": "1.18.9"
        },
        "InstallerBGitHubInstallerLocation": {
            "Description": "The location  to use if Github is selected",
            "Type": "String",
            "Default": "https://github.com/Juniper/k8s-federated-deployer.git -b release-3.11-contrail"
        },
        "InstallerCS3Location": {
            "Description": "The location  to use if Github is selected",
            "Type": "String",
            "Default": "https://s3-eu-central-1.amazonaws.com/contrail-one-click-deployers/contrail-k8s-microk8s.yaml"
         },
        "NodeMTU": {
            "Description": "MTU for the Nodes. Usefull for VPN gateways, which might need a sub 1500 MTU",
            "Type": "String",
            "Default": "9000"
         },
        "NumberOfClusters": {
            "Description": "Number of Contrail+microK8s clusters to deploy in the auto scaling group",
            "Type": "String",
            "Default": "1"
         },
        "DebugLogs": {
            "Description": "if true we will enable SYS_DEBUG in the contrail cni",
            "Type": "String",
            "Default": "false"
        },
        "TestPod": {
            "Description": "if true we deploy a test pod into each node for you",
            "Type": "String",
            "Default": "true"
        },
        "FullMesh": {
            "Description": "if true controllers are bgp meshed ",
            "Type": "String",
            "Default": "true"
        },
        "MX1Name": {
            "Description": "MX1 bgp peer name",
            "Type": "String",
            "Default": "mx1"
        },
        "MX2Name": {
            "Description": "MX2 bgp peer name",
            "Type": "String",
            "Default": "mx2"
        },
        "MX1ASN": {
            "Description": "MX1 bgp peer ASN",
            "Type": "String",
            "Default": "64533"
        },
        "MX2ASN": {
            "Description": "MX2 bgp peer ASN",
            "Type": "String",
            "Default": "64534"
        },
        "MX1Password": {
            "Description": "MX1 password for netconf",
            "Type": "String",
            "NoEcho": "True",
            "Default": "contrail123"
        },
        "MX2Password": {
            "Description": "MX2 password for netconf",
            "Type": "String",
            "NoEcho": "True",
            "Default": "contrail123"
        },
        "MX1User": {
            "Description": "MX1 username for netconf",
            "Type": "String",
            "Default": "root"
        },
        "MX2User": {
            "Description": "MX2 username for netconf",
            "Type": "String",
            "Default": "root"
        },
        "MX1IPAddress": {
            "Description": "MX1 IP Address",
            "Type": "String",
            "Default": "10.20.30.10"
        },
        "MX2IPAddress": {
            "Description": "MX2 IP Address",
            "Type": "String",
            "Default": "10.20.30.11"
        },
        "ExternaldnsEnabled": {
            "Description": "true if you want to deploy external DNS into AWS with a test app",
            "Type": "String",
            "Default": "true"
        },
        "ExternaldnsCreateZone": {
            "Description": "true if you want the stack to create the zone",
            "Type": "String",
            "Default": "true"
        },
        "ExternaldnsDomainFilter": {
            "Description": "domain for the external dns to monitor",
            "Type": "String",
            "Default": "incubator.dev.int.foobarservices.com"
        },
        "ExternaldnsZoneID": {
            "Description": "if using an existing domain enter the hosted zone ID here",
            "Type": "String",
            "Default": "Z09733143J0NHZEXWD6B"
        }
    },
    "Resources": {
        "InfraStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                 "TemplateURL" : "https://contrail-one-click-deployers.s3-eu-central-1.amazonaws.com/microk8s-infra.json",
                 "Parameters": {
                    "AvailabilityZone1": {
                        "Ref": "AvailabilityZone1"
                    },
                    "AvailabilityZone2": {
                        "Ref": "AvailabilityZone2"
                    },
                    "AvailabilityZone3": {
                        "Ref": "AvailabilityZone3"
                    },
                    "VPCCIDR1": {
                        "Ref": "VPCCIDR1"
                    },
                    "PublicSubnetCIDR1": {
                        "Ref": "PublicSubnetCIDR1"
                    },
                    "PrivateSubnetCIDR1": {
                        "Ref": "PrivateSubnetCIDR1"
                    },
                    "PrivateSubnetCIDR2": {
                        "Ref": "PrivateSubnetCIDR2"
                    },
                    "PrivateSubnetCIDR3": {
                        "Ref": "PrivateSubnetCIDR3"
                    },
                    "SiteName": {
                        "Ref": "SiteName"
                    },
                    "VPCDOMAIN": {
                        "Ref": "VPCDOMAIN"
                    }
                }
            }
        },
        "NodeStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                 "TemplateURL" : "https://contrail-one-click-deployers.s3-eu-central-1.amazonaws.com/microk8s-nodes.json",
                 "Parameters": {
                    "AvailabilityZone1": {
                        "Ref": "AvailabilityZone1"
                    },
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "microk8sInstanceType": {
                        "Ref": "microk8sInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "ContainerRegistryTag": {
                        "Ref": "ContainerRegistryTag"
                    },
                    "ContainerRegistryUserName": {
                        "Ref": "ContainerRegistryUserName"
                    },
                    "ContainerRegistryPassword": {
                        "Ref": "ContainerRegistryPassword"
                    },
                    "ContrailBastionPrivateSNGatewayIP": {
                        "Ref": "ContrailBastionPrivateSNGatewayIP"
                    },
                    "DeployContrailBastion": {
                        "Ref": "DeployContrailBastion"
                    },
                    "ContrailBastionAZ1PublicIP": {
                        "Ref": "ContrailBastionAZ1PublicIP"
                    },
                    "ContrailBastionAZ1PrivateIP": {
                        "Ref": "ContrailBastionAZ1PrivateIP"
                    },
                    "UserLocation": {
                        "Ref": "UserLocation"
                    },
                    "SGSubnet1": {
                        "Ref": "SGSubnet1"
                    },
                    "SGSubnet2": {
                        "Ref": "SGSubnet2"
                    },
                    "SGSubnet3": {
                        "Ref": "SGSubnet3"
                    },
                    "SGSubnet4": {
                        "Ref": "SGSubnet4"
                    },
                    "SiteName": {
                        "Ref": "SiteName"
                    },
                    "SSHPassword": {
                        "Ref": "SSHPassword"
                    },
                    "ContrailPassword": {
                        "Ref": "ContrailPassword"
                    },
                    "idVPC": {
                        "Fn::GetAtt": [ "InfraStack", "Outputs.idVPC" ]
                    },
                    "idPublicSubnet1": {
                        "Fn::GetAtt": [ "InfraStack", "Outputs.idPublicSubnet1" ]
                    },
                    "idPrivateSubnet1": {
                        "Fn::GetAtt": [ "InfraStack", "Outputs.idPrivateSubnet1" ]
                    },
                    "k8sPodBaseIP": {
                        "Ref": "k8sPodBaseIP"
                    },
                    "k8sServiceBaseIP": {
                        "Ref": "k8sServiceBaseIP"
                    },
                    "k8sFabricBaseIP": {
                        "Ref": "k8sFabricBaseIP"
                    },
                    "k8sFabricSN": {
                        "Ref": "k8sFabricSN"
                    },
                    "k8sBaseASN": {
                        "Ref": "k8sBaseASN"
                    },
                    "k8sVersion": {
                        "Ref": "k8sVersion"
                    },
                    "InstallerBGitHubInstallerLocation": {
                        "Ref": "InstallerBGitHubInstallerLocation"
                    },
                    "InstallerCS3Location": {
                        "Ref": "InstallerCS3Location"
                    },
                    "NodeMTU": {
                        "Ref": "NodeMTU"
                    },
                    "NumberOfClusters": {
                        "Ref": "NumberOfClusters"
                    },
                    "DebugLogs": {
                        "Ref": "DebugLogs"
                    },
                    "TestPod": {
                        "Ref": "TestPod"
                    },
                    "FullMesh": {
                        "Ref": "FullMesh"
                    },
                    "MX1Name": {
                        "Ref": "MX1Name"
                    },
                    "MX2Name": {
                        "Ref": "MX2Name"
                    },
                    "MX1ASN": {
                        "Ref": "MX1ASN"
                    },
                    "MX2ASN": {
                        "Ref": "MX2ASN"
                    },
                    "MX1Password": {
                        "Ref": "MX1Password"
                    },
                    "MX2Password": {
                        "Ref": "MX2Password"
                    },
                    "MX1User": {
                        "Ref": "MX1User"
                    },
                    "MX2User": {
                        "Ref": "MX2User"
                    },
                    "MX1IPAddress": {
                        "Ref": "MX1IPAddress"
                    },
                    "MX2IPAddress": {
                        "Ref": "MX2IPAddress"
                    },
                    "ExternaldnsEnabled": {
                        "Ref": "ExternaldnsEnabled"
                    },
                    "ExternaldnsCreateZone": {
                        "Ref": "ExternaldnsCreateZone"
                    },
                    "ExternaldnsDomainFilter": {
                        "Ref": "ExternaldnsDomainFilter"
                    },
                    "ExternaldnsZoneID": {
                        "Ref": "ExternaldnsZoneID"
                    }
                }
            }
        }
    },
    "Outputs": {
        "ContrailBastionWebUI": {
            "Description": "Contrail Bastion Web UI, please give it a few minutes to build",
            "Value":  { "Fn::Join": [ "", [ "https://", { "Fn::GetAtt": [ "NodeStack", "Outputs.IPAddress1" ] }, ":9091" ] ] }
        },
        "ContrailBastionAZ1PublicIP": {
            "Description": "Contrail Bastion Public IP",
            "Value": {
                "Fn::GetAtt": [ "NodeStack", "Outputs.IPAddress1" ] 
            }
        },
        "SSHtoContrailBastion": {
            "Description": "SSH to contrail bastion",
            "Value": { "Fn::Join": [ "", [ "   ssh -i [your ContrailKey1 private key file] ubuntu@", { "Fn::GetAtt": [ "NodeStack", "Outputs.IPAddress1" ] }, "" ] ] }
        },
        "EnableAccessTomicrok8sNode": {
            "Description": "enable ssh and contrail ui access to an microk8s via Contrail Bastion",
            "Value": { "Fn::Join": [ "", [ "   ssh -i [your ContrailKey1 private key file] ubuntu@", { "Fn::GetAtt": [ "NodeStack", "Outputs.IPAddress1" ] }, " sudo /usr/bin/add-nat.sh -n [node ip address] " ] ] }
        },
        "SSHTomicrok8sNode": {
            "Description": "ssh to microk8s node via Contrail Bastion",
            "Value": { "Fn::Join": [ "", [ "   ssh -i [your ContrailKey1 private key file] ubuntu@", { "Fn::GetAtt": [ "NodeStack", "Outputs.IPAddress1" ] }, " -p 222 " ] ] }
        },
        "UIAccessmicrok8sNode": {
            "Description": "Contrail web UI on the microk8s node via Contrail Bastion",
            "Value": { "Fn::Join": [ "", [ "https://", { "Fn::GetAtt": [ "NodeStack", "Outputs.IPAddress1" ] }, ":8143 " ] ] }
        },
        "Note1": {
            "Description": "NA",
            "Value": "Note: if you rerun add-nat.sh to access a different node you will have to clear your browser cache" 
        }
    }
}
