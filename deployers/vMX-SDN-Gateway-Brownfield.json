{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This stacks vMX is provisioned using fabric, see video. Deploys a vMX into an existing public and private subnet ready to act as an SDN gateway",
    "Parameters": {
        "SDNGatewayAvailabilityZone1": {
            "Description": "AWS Availability Zone For the SDN Gateway",
            "Type": "String",
            "Default": "eu-west-1a"
        },
        "SDNGatewayInstanceType": {
            "Description": "SDN Gateway Instance Type. By default we run in lite mode",
            "Type": "String",
            "Default": "m4.xlarge"
        },
        "BMInstanceType": {
            "Description": "bare metal test instance type",
            "Type": "String",
            "Default": "t2.nano"
        },
        "DeployBareMetal1": {
            "AllowedValues": [ "true", "false" ],
            "Default": "true",
            "Description": "true and we deploy a bare metal test instance for you",
            "Type": "String"
        },
        "KeyName": {
            "Description": "SSH Key Name",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "ContrailKey"
        },
        "SDNGatewayFXP0PublicIP": {
            "Description": "SDN Gateway public static IP",
            "Type": "String",
            "Default": "100.72.100.204"
        },
        "SDNGatewayFXP0PublicIPSN": {
            "Description": "SDN Gateway public static IP SubNet Length",
            "Type": "String",
            "Default": "26"
        },
        "SDNGatewayAZ1PrivateIPGE000": {
            "Description": "SDN Gateway private static IP on GE000 used for contrail controller traffic",
            "Type": "String",
            "Default": "100.72.100.12"
        },
        "SDNGatewayAZ1PrivateIPGE000SN": {
            "Description": "SDN Gateway private static IP on GE000 SubNet Length",
            "Type": "String",
            "Default": "26"
        },
        "SDNGatewayAZ1PrivateIPGE001": {
            "Description": "SDN Gateway private static IP on GE001 used for access to underlay EC2 instances",
            "Type": "String",
            "Default": "100.72.101.4"
        },
        "SDNGatewayAZ1PrivateIPGE001SN": {
            "Description": "SDN Gateway private static IP on GE001 SubNet Length",
            "Type": "String",
            "Default": "27"
        },
        "SDNGatewayLoopbackIP": {
            "Description": "SDN Gateway Loopback Address",
            "Type": "String",
            "Default": "192.190.0.50/32"
        },
        "UserLocation" : {
            "Description": "The IP address range that can be used for OAM access directly to the Gateway instance over internet. Typically your laptop /32. If left blank we will add 0.0.0./0 and allow ssh from anywhere",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "0.0.0.0/0",
            "ConstraintDescription": "Put your Client IP here x.x.x.x/32, if you leave it blank then 0.0.0.0/0 will be populated and the internet will be able access your deployments UI and SSH"
        },
        "BareMetalSubnet1" : {
            "Description": "VPC Subnet to create and attach to the vMX  port  ge-0/0/1. If  you do not want this subnet created then  set it to notset",
            "Type": "String",
            "Default": "100.72.101.0/26"
        },
        "SGSubnet1": {
            "Description": "AN IP address range allowed in security to point towards the SDN Gateway on the private subnet",
            "Type": "String",
            "Default": "100.73.100.0/23"
        },
        "SGSubnet2": {
            "Description": "AN IP address range allowed in security to point towards the SDN Gateway on the private subnet. Leave it blank if you do not want it populated",
            "Type": "String",
            "Default": "notset"
        },
        "SGSubnet3": {
            "Description": "AN IP address range allowed in security to point towards the SDN Gateway on the private subnet. Leave it blank if you do not want it populated",
            "Type": "String",
            "Default": "notset"
        },
        "SGSubnet4": {
            "Description": "AN IP address range allowed in security to point towards the SDN Gateway on the private subnet. Leave it blank if you do not want it populated",
            "Type": "String",
            "Default": "notset"
        },
        "SiteName": {
            "Description": "Site Name",
            "Type": "String",
            "Default": "SDNGateway1"
        },
        "SSHEncryptedPassword": {
            "Description": "SSH Encrypted Password",
            "Type": "String",
            "Default": "$6$EJlAdXxd$qg4pMaAu4Pf9.Vxmz7Gpdypn1Uw2gzzMV17WEiqGqRXVfh5UbfZ4YFZNBC4XR56nhXzWoZdFiu2gPMeN6JEn3.",
            "NoEcho": true
        },
        "idVPC": {
            "Description": "Existing VPCid where the SDN Gateway will sit",
            "Type": "String"
        },
        "idSDNGatewayPublicSubnet1": {
            "Description": "Existing Public Subnet id for the SDN Gateway to sit within",
            "Type": "String"
        },
        "idControllersPrivateSubnet1": {
            "Description": "Existing Private Subnet 1 id for the SDN Gateway to sit within",
            "Type": "String"
        },
        "idControllersPrivateSubnetRouteTable1": {
            "Description": "Existing Route Table id for the private subnet, so we can inject an MX route. if this is left as notset then we do not populate the route for you",
            "Type": "String",
            "Default": "notset"
        },
        "idControllersSecurityGroup": {
            "Description": "your existing security group used by the Contrail Controller and workers, if specified we will add rules into ours and this SG to allow SDNGW to Contrail Traffic. These rules also cover the vMX loopback traffic. Leave to notset if you do not want us to add these rules for you",
            "Type": "String",
            "Default": "notset"
        }
    },
    "Mappings": {
        "AWSRegionArch2AMIR18PAYG": {
            "eu-central-1": { "VMXHVM": "ami-01d92771730e32cd9" },
            "ap-southeast-2": { "VMXHVM": "ami-06802f78db7a687f2" },
            "eu-west-1": { "VMXHVM": "ami-08d42f017ad3870f2" },
            "us-east-1": { "VMXHVM": "ami-0c27852fa00391f54" },
            "us-east-2": { "VMXHVM": "ami-05aa93d5f6932b707" },
            "us-west-2": { "VMXHVM": "ami-0e86bb4f89f845f0c" },
            "ap-northeast-1": { "VMXHVM": "ami-052d8f3d93bb0dcac" },
            "eu-west-2": { "VMXHVM": "ami-0346a364c86458dd9" },
            "eu-west-3": { "VMXHVM": "ami-01f0bd231424c5541" },
            "ap-southeast-1": { "VMXHVM": "ami-03cb7b2081381ea67" },
            "eu-north-1": { "VMXHVM": "ami-af62ead1" },
            "ap-south-1": { "VMXHVM": "ami-0676729a6c4bfae96" },
            "ap-northeast-2": { "VMXHVM": "ami-09aa2ca6605222c2a" },
            "sa-east-1": { "VMXHVM": "ami-0e40c323dd59d6b7f" }
        },
        "AWSRegionArch2AMIR19BYOL": {
            "eu-central-1": { "VMXHVM": "ami-0c909c0cb95ea516c" },
            "ap-southeast-2": { "VMXHVM": "ami-0a40f79fe18e8f533" },
            "eu-west-1": { "VMXHVM": "ami-0ad95096c95740994" },
            "us-east-1": { "VMXHVM": "ami-058765f5dec711ffa" },
            "us-east-2": { "VMXHVM": "ami-0ef9b8961acd0a1c8" },
            "us-west-2": { "VMXHVM": "ami-0781d045dc5b2d427" },
            "ap-northeast-1": { "VMXHVM": "ami-00f30a38d8a453af1" },
            "eu-west-2": { "VMXHVM": "ami-0c20283d59ade6460" },
            "eu-west-3": { "VMXHVM": "ami-037ebcc38ee13c894" },
            "ap-southeast-1": { "VMXHVM": "ami-0f35be28517f75e3e" },
            "eu-north-1": { "VMXHVM": "ami-0b3143844e6e605be" },
            "ap-south-1": { "VMXHVM": "ami-0643f4f6b95785ec9" },
            "ap-northeast-2": { "VMXHVM": "ami-0ca8ddbef790d121c" },
            "sa-east-1": { "VMXHVM": "ami-0cd239c3c7b78efe2" }
        },
        "AWSRegionArch2AMIBM": {
            "eu-central-1": { "HVM": "ami-0bad2b43a871348da" },
            "ap-southeast-2": { "HVM": "ami-07e22925f7bf77a0c" },
            "eu-west-1": { "HVM": "ami-0f2ed58082cb08a4d" },
            "us-east-1": { "HVM": "ami-039a49e70ea773ffc" },
            "us-east-2": { "HVM": "ami-03ffa9b61e8d2cfda" },
            "us-west-2": { "HVM": "ami-008c6427c8facbe08" },
            "ap-northeast-1": { "HVM": "ami-0196a6e6d6129f2c8" },
            "eu-west-2": { "HVM": "ami-0b1912235a9e70540" },
            "eu-west-3": { "HVM": "ami-0b92a0ac418c64fb1" },
            "ap-southeast-1": { "HVM": "ami-01c54eee4ab8725c0" },
            "eu-north-1": { "HVM": "ami-0caae0b310f01ff33" },
            "ap-south-1": { "HVM": "ami-01b8d0884f38e37b4" },
            "ap-northeast-2": { "HVM": "ami-04e5ceec6723d7ec5" },
            "sa-east-1": { "HVM": "ami-0bb677666cd3fd188" }
        }
    },
    "Conditions": {
        "HasSGSubnet1": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "SGSubnet1" }, "notset"] }] },
        "HasSGSubnet2": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "SGSubnet2" }, "notset"] }] },
        "HasSGSubnet3": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "SGSubnet3" }, "notset"] }] },
        "HasSGSubnet4": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "SGSubnet4" }, "notset"] }] },
        "HasBareMetalSubnet1": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "BareMetalSubnet1" }, "notset"] }] },
        "HasDeployBareMetal1": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "DeployBareMetal1" }, "false"] }] },
        "HasRoutTableID": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "idControllersPrivateSubnetRouteTable1" }, "notset"] }] },
        "HasContrailSGID": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "idControllersSecurityGroup" }, "notset"] }] }
    },
    "Resources": {
        "SDNGWFXP0PUBLICIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "SecurityGroupSDNGW": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": { "Ref": "idVPC" },
                "GroupDescription": "Security group for the SDN Gateway, public and on internet",
                "GroupName": { "Fn::Join": [".", ["SDN_Gateway_public_SG", { "Ref": "SiteName" }, { "Ref": "SDNGatewayAvailabilityZone1" }]] },
                "SecurityGroupIngress": [{
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": { "Ref": "UserLocation" },
                        "Description": "allow ssh access from the client"
                    }
                ],
                "SecurityGroupEgress": [{
                    "IpProtocol": "-1",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "0.0.0.0/0",
                    "Description": "allow all outbound traffic"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join": [".", ["SDN_Gateway_Security_Group", { "Ref": "SiteName" }, { "Ref": "SDNGatewayAvailabilityZone1" }]] }
                }]
            }
        },
        "SgEntryGW01": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasSGSubnet1",
            "Properties": {
                "GroupId": { "Ref": "SecurityGroupSDNGW" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": { "Ref": "SGSubnet1" },
                "Description": "allow inbound traffic to the SDN Gateway from a specified subnet subnet1"
            }
        },
        "SgEntryGW02": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasSGSubnet2",
            "Properties": {
                "GroupId": { "Ref": "SecurityGroupSDNGW" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": { "Ref": "SGSubnet2" },
                "Description": "allow inbound traffic to the SDN Gateway from a specified subnet subnet2"
            }
        },
        "SgEntryGW03": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasSGSubnet3",
            "Properties": {
                "GroupId": { "Ref": "SecurityGroupSDNGW" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": { "Ref": "SGSubnet3" },
                "Description": "allow inbound traffic to the SDN Gateway from a specified subnet subnet3"
            }
        },
        "SgEntryGW04": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasSGSubnet4",
            "Properties": {
                "GroupId": { "Ref": "SecurityGroupSDNGW" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": { "Ref": "SGSubnet4" },
                "Description": "allow inbound traffic to the SDN Gateway from a specified subnet subnet4"
            }
        },
        "SgEntryIngressFromContrailController": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasContrailSGID",
            "Properties": {
                "GroupId": { "Ref": "SecurityGroupSDNGW" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "SourceSecurityGroupId": { "Ref": "idControllersSecurityGroup" },
                "Description": "allow inbound traffic from the SDN Controller SG if it was provisioned"
            }
        },
        "SgEntryIngressFromSDNGW": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasContrailSGID",
            "Properties": {
                "GroupId": { "Ref": "idControllersSecurityGroup" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "SourceSecurityGroupId": { "Ref": "SecurityGroupSDNGW" },
                "Description": "here we are adding an SG rule to a security groups we did not create to allow ingress traffic from the SDN GW to the SDN controller, this rules also covers the MX bgp loopback traffic. We only do this is the SG ID  was provisioned in the stack parameters"
            }
        },
        "SGIngressSecurityGroupSDNGW": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "SecurityGroupSDNGW"
                },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "SourceSecurityGroupId": {
                    "Ref": "SecurityGroupSDNGW"
                },
                "Description": "loopback rule"
            }
        },
        "BMRouteTable1": {
            "Type": "AWS::EC2::RouteTable",
            "Condition": "HasBareMetalSubnet1",
            "Properties": {
                "VpcId": { "Ref": "idVPC" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "BareMetalRouteTable1", { "Ref" : "SiteName" }, { "Ref" : "SDNGatewayAvailabilityZone1" } ] ] }
                    },
                    {
                        "Key": "CloudFormationStack",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "BMRoute1": {
            "Type": "AWS::EC2::Route",
            "Condition": "HasBareMetalSubnet1",
            "Properties": {
                "RouteTableId": {
                    "Ref": "BMRouteTable1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NetworkInterfaceId": {
                    "Ref": "Eth2SDNGateway"
                }
            }
        },
        "BMRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition": "HasBareMetalSubnet1",
            "Properties": {
                "SubnetId": {
                    "Ref": "BMSubnet1"
                },
                "RouteTableId": {
                    "Ref": "BMRouteTable1"
                }
            }
        },
        "BMSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Condition": "HasBareMetalSubnet1",
            "Properties": {
                "AvailabilityZone" : { "Ref" : "SDNGatewayAvailabilityZone1" },
                "VpcId": { "Ref": "idVPC" },
                "CidrBlock": {
                    "Ref": "BareMetalSubnet1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "BareMetalSubnet1", { "Ref" : "SiteName" }, { "Ref" : "SDNGatewayAvailabilityZone1" } ] ] }
                    }
                ]
            }
        },
        "SDNGatewayInstance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": ["Eth0SDNGateway", "Eth1SDNGateway"],
            "Properties": {
                "AvailabilityZone": { "Ref": "SDNGatewayAvailabilityZone1" },
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                        "VolumeSize": "100"
                    }
                }],
                "ImageId": {
                    "Fn::FindInMap": ["AWSRegionArch2AMIR19BYOL", { "Ref": "AWS::Region"}, "VMXHVM"]
                },
                "InstanceType": {
                    "Ref": "SDNGatewayInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "NetworkInterfaces": [{
                        "NetworkInterfaceId": { "Ref": "Eth0SDNGateway" },
                        "DeviceIndex": "0"
                    },
                    {
                        "NetworkInterfaceId": { "Ref": "Eth1SDNGateway" },
                        "DeviceIndex": "1"
                    },
                    {
                        "NetworkInterfaceId": { "Ref": "Eth2SDNGateway" },
                        "DeviceIndex": "2"
                    }
                ],
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join": [".", ["SDN_Gateway_Instance", { "Ref": "SiteName" }, { "Ref": "SDNGatewayAvailabilityZone1" }]] }
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                 "#junos-config\n",
                                 "groups {\n",
                                 "    global {\n",
                                 "        system {\n",
                                 "            host-name HOSTNAME;\n",
                                 "            root-authentication {\n",
                                 "                encrypted-password \"$6$EJlAdXxd$qg4pMaAu4Pf9.Vxmz7Gpdypn1Uw2gzzMV17WEiqGqRXVfh5UbfZ4YFZNBC4XR56nhXzWoZdFiu2gPMeN6JEn3.\";\n",
                                 "            } \n",
                                 "            services {\n",
                                 "                ssh {\n",
                                 "                    root-login deny-password;\n",
                                 "                    max-sessions-per-connection 32;\n",
                                 "                    client-alive-interval 120;\n",
                                 "                } \n",
                                 "                netconf {\n",
                                 "                    ssh;\n",
                                 "                    traceoptions {\n",
                                 "                        file netconf-ops.log size 3m files 20 world-readable;\n",
                                 "                        flag all;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            ntp {\n",
                                 "                server 169.254.169.123;\n",
                                 "            }\n",
                                 "            login {\n",
                                 "                user jnpr {\n",
                                 "                    uid 2000;\n",
                                 "                    class super-user;\n",
                                 "                    authentication {\n",
                                 "                        ssh-rsa \"SSHRSAKEY\";\n",
                                 "                        encrypted-password \"$6$EJlAdXxd$qg4pMaAu4Pf9.Vxmz7Gpdypn1Uw2gzzMV17WEiqGqRXVfh5UbfZ4YFZNBC4XR56nhXzWoZdFiu2gPMeN6JEn3.\";\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            syslog {\n",
                                 "                user * {\n",
                                 "                    any emergency;\n",
                                 "                }\n",
                                 "                file messages {\n",
                                 "                    any notice;\n",
                                 "                    authorization info;\n",
                                 "                }\n",
                                 "                file interactive-commands {\n",
                                 "                    interactive-commands any;\n",
                                 "                } \n",
                                 "            }\n",
                                 "        }\n",
                                 "        interfaces {\n",
                                 "            fxp0 {\n",
                                 "                unit 0 {\n",
                                 "                    family inet {\n",
                                 "                        address ", { "Ref": "SDNGatewayFXP0PublicIP" }, "/", { "Ref": "SDNGatewayFXP0PublicIPSN" }, ";\n",
                                 "                    } \n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "        routing-options {\n",
                                 "            static {\n",
                                 "                route 0.0.0.0/0 {\n",
                                 "                    next-hop GATEWAY;\n",
                                 "                    retain;\n",
                                 "                    no-readvertise;\n",
                                 "                } \n",
                                 "            }\n",
                                 "            router-id ", { "Ref": "SDNGatewayLoopbackIP" }, ";\n",
                                 "        }\n",
                                 "    }\n",
                                 "}\n",
                                 "apply-groups global;\n",
                                 "chassis {\n",
                                 "    fpc 0 {\n",
                                 "        pic 0 {\n",
                                 "            tunnel-services;\n",
                                 "        }\n",
                                 "        lite-mode;\n",
                                 "    }\n",
                                 "    network-services enhanced-ip;\n",
                                 "}\n",
                                 "interfaces {\n",
                                 "    lo0 {\n",
                                 "        unit 0 {\n",
                                 "            family inet {\n",
                                 "                address 127.0.0.1/32;\n",
                                 "                address ", { "Ref": "SDNGatewayLoopbackIP" }, " {\n",
                                 "                    preferred;\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    ge-0/0/0 {\n",
                                 "        unit 0 {\n",
                                 "            family inet {\n",
                                 "                address ", { "Ref": "SDNGatewayAZ1PrivateIPGE000" }, "/", { "Ref": "SDNGatewayAZ1PrivateIPGE000SN" }, ";\n",
                                 "            }\n",
                                 "            family mpls;\n",
                                 "        }\n",
                                 "    }\n",
                                 "    ge-0/0/1 {\n",
                                 "        unit 0 {\n",
                                 "            family inet {\n",
                                 "                address ", { "Ref": "SDNGatewayAZ1PrivateIPGE001" }, "/", { "Ref": "SDNGatewayAZ1PrivateIPGE001SN" }, ";\n",
                                 "            }\n",
                                 "            family mpls;\n",
                                 "        }\n",
                                 "    }\n",
                                 "}\n"
                        ]
                    ]
                }
              }
            }
        },
        "Eth0SDNGateway" : {
          "Type" : "AWS::EC2::NetworkInterface",
          "Properties" : {
            "Description"     : "fxp0",
            "GroupSet"        : [ { "Ref" : "SecurityGroupSDNGW" } ],
            "PrivateIpAddress" : { "Ref" : "SDNGatewayFXP0PublicIP" },
            "SourceDestCheck" : "false",
            "SubnetId"        : { "Ref" : "idSDNGatewayPublicSubnet1" },
            "Tags"            : [ {"Key" : "Name", "Value" : "Interface 0"}, {"Key" : "Interface", "Value" : "fxp0"} ]
          }
        },
        "Eth1SDNGateway" : {
          "Type" : "AWS::EC2::NetworkInterface",
          "Properties" : {
            "Description"     : "ge000",
            "GroupSet"        : [ { "Ref" : "SecurityGroupSDNGW" } ],
            "PrivateIpAddress" : { "Ref" : "SDNGatewayAZ1PrivateIPGE000" },
            "SourceDestCheck" : "false",
            "SubnetId"        : { "Ref" : "idControllersPrivateSubnet1" },
            "Tags"            : [ {"Key" : "Name", "Value" : "Interface 1"}, {"Key" : "Interface", "Value" : "ge000"} ]
            }
        },
        "Eth2SDNGateway" : {
          "Type" : "AWS::EC2::NetworkInterface",
          "Properties" : {
            "Description"     : "ge001",
            "GroupSet"        : [ { "Ref" : "SecurityGroupSDNGW" } ],
            "PrivateIpAddress" : { "Ref" : "SDNGatewayAZ1PrivateIPGE001" },
            "SourceDestCheck" : "false",
            "SubnetId"        : { "Ref" : "BMSubnet1" },
            "Tags"            : [ {"Key" : "Name", "Value" : "Interface 1"}, {"Key" : "Interface", "Value" : "ge001"} ]
            }
        },
        "BareMetalTestInstance1": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": ["BMSubnet1"],
            "Condition": "HasDeployBareMetal1",
            "Properties": {
                "AvailabilityZone": { "Ref": "SDNGatewayAvailabilityZone1" },
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                        "VolumeSize": "10"
                    }
                }],
                "ImageId": {
                    "Fn::FindInMap": ["AWSRegionArch2AMIBM", { "Ref": "AWS::Region"}, "HVM"]
                },
                "InstanceType": {
                    "Ref": "BMInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SubnetId" : { "Ref" : "BMSubnet1" },
                "SourceDestCheck" : "false",
                "SecurityGroupIds" : [ { "Ref" : "SecurityGroupSDNGW" } ], 
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join": [".", ["BareMetalTestInstance1", { "Ref": "SiteName" }, { "Ref": "SDNGatewayAvailabilityZone1" }]] }
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                 "#user data here\n",
                                 "#\n"
                        ]
                    ]
                }
              }
            }
        },
        "IPAssociaton1": {
            "Type": "AWS::EC2::EIPAssociation",
            "DependsOn": "SDNGatewayInstance",
            "Properties": {
                "NetworkInterfaceId" : { "Ref" : "Eth0SDNGateway" },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "SDNGWFXP0PUBLICIP",
                        "AllocationId"
                    ]
                }
            }
        },
        "PrivateSubnetRoute": {
            "Type": "AWS::EC2::Route",
            "Condition": "HasRoutTableID",
            "Properties": {
                "RouteTableId": {
                    "Ref": "idControllersPrivateSubnetRouteTable1"
                },
                "DestinationCidrBlock": { "Ref" : "SDNGatewayLoopbackIP" },
                "NetworkInterfaceId": {
                    "Ref": "Eth1SDNGateway"
                }
            }
        },
    },
    "Outputs": {
        "SDNGatewayFXP0PublicIP": {
            "Description": "SDN Gateway Public IP",
            "Value": {
                "Ref": "SDNGWFXP0PUBLICIP"
            }
        },
        "SDNGatewayFXP0PrivateIP": {
            "Description": "SDN Gateway FXP0 private (internal) IP",
            "Value": {
                "Ref": "Eth0SDNGateway"
            }
        },
        "SDNGatewayAZ1PrivateIPGE000": {
            "Description": "SDN Gateway WAN IP used by Contrail for control plane",
            "Value": {
                "Ref": "Eth1SDNGateway"
            }
        },
        "SDNGatewayAZ1PrivateIPGE001": {
            "Description": "SDN Gateway WAN IP used for underlay",
            "Value": {
                "Ref": "Eth2SDNGateway"
            }
        },
        "SSHtoSDNGateway": {
            "Description": "SSH to vMX FXP0 command",
            "Value": { "Fn::Join": [ "", [ "   ssh -i [your ContrailKey1 private key file] jnpr@", {"Ref": "SDNGWFXP0PUBLICIP"}, "" ] ] }
        },
        "Hints": {
            "Description": "The first time you use the vMX your stack will fail. In the cloudformation stack events you will be prompted with a copy paste link, to accept the terms and conditions for the AMI",
            "Value": NA 
        }
    }
}
