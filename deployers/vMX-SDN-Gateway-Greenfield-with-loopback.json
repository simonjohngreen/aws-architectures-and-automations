{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploys a vMX into an existing public and private subnet ready to act as an SDN gateway",
    "Parameters": {
        "AvailabilityZone1": {
            "Description": "AWS Availability Zone For the SDN Gateway",
            "Type": "String",
            "Default": "eu-west-2a"
        },
        "SDNGatewayInstanceType": {
            "Description": "SDN Gateway Instance Type. By default we run in lite mode",
            "Type": "String",
            "Default": "m4.xlarge"
        },
        "BMInstanceType": {
            "Description": "bare metal test instance type",
            "Type": "String",
            "Default": "t2.nano"
        },
        "DeployBareMetal1": {
            "AllowedValues": [ "true", "false" ],
            "Default": "true",
            "Description": "true and we deploy a bare metal test instance into bare network subnet 1 for you",
            "Type": "String"
        },
        "DeployBareMetal2": {
            "AllowedValues": [ "true", "false" ],
            "Default": "true",
            "Description": "true and we deploy a bare metal test instance into bare network subnet 2 for you",
            "Type": "String"
        },
        "KeyName": {
            "Description": "SSH Key Name",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "Contrailkey-uk"
        },
        "SDNGatewayFXP0PublicIP": {
            "Description": "SDN Gateway public static IP",
            "Type": "String",
            "Default": "100.72.102.204"
        },
        "SDNGatewayFXP0PublicIPSN": {
            "Description": "SDN Gateway public static IP SubNet Length",
            "Type": "String",
            "Default": "26"
        },
        "SDNGatewayAZ1PrivateIPGE000": {
            "Description": "SDN Gateway private static IP on GE000 used for contrail controller traffic",
            "Type": "String",
            "Default": "100.72.102.12"
        },
        "SDNGatewayAZ1PrivateIPGE000SN": {
            "Description": "SDN Gateway private static IP on GE000 SubNet Length",
            "Type": "String",
            "Default": "26"
        },
        "SDNGatewayAZ1PrivateIPGE000AWSGW": {
            "Description": "AWS GW IP on the private subnets (control and data plane traffic)",
            "Type": "String",
            "Default": "100.72.102.1"
        },
        "SDNGatewayAZ1PrivateIPGE001": {
            "Description": "SDN Gateway private static IP on GE001",
            "Type": "String",
            "Default": "100.72.103.4"
        },
        "SDNGatewayAZ1PrivateIPGE001SN": {
            "Description": "SDN Gateway private static IP on GE001 SubNet Length",
            "Type": "String",
            "Default": "26"
        },
        "SDNGatewayAZ1PrivateIPGE002": {
            "Description": "SDN Gateway private static IP on GE002",
            "Type": "String",
            "Default": "100.72.103.68"
        },
        "SDNGatewayAZ1PrivateIPGE002SN": {
            "Description": "SDN Gateway private static IP on GE002 SubNet Length",
            "Type": "String",
            "Default": "26"
        },
        "SDNGatewayLoopbackIP": {
            "Description": "SDN Gateway Loopback Address",
            "Type": "String",
            "Default": "192.190.0.60"
        },
        "UserLocation" : {
            "Description": "The IP address range that can be used for OAM access directly to the Gateway instance over internet. Typically your laptop /32. If left blank we will add 0.0.0./0 and allow ssh from anywhere",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "0.0.0.0/0",
            "ConstraintDescription": "Put your Client IP here x.x.x.x/32, if you leave it blank then 0.0.0.0/0 will be populated and the internet will be able access your deployments UI and SSH"
        },
        "BareMetalSubnet1" : {
            "Description": "VPC Subnet to create and attach to the vMX  port  ge-0/0/1. If  you do not want this subnet created then  set it to notset",
            "Type": "String",
            "Default": "100.72.103.0/26"
        },
        "BareMetalGateway1" : {
            "Description": "VPC Subnet AWS Gateway for port  ge-0/0/1",
            "Type": "String",
            "Default": "100.72.103.1"
        },
        "BareMetalSubnet2" : {
            "Description": "VPC Subnet to create and attach to the vMX  port  ge-0/0/2. If  you do not want this subnet created then  set it to notset",
            "Type": "String",
            "Default": "100.72.103.64/26"
        },
        "BareMetalGateway2" : {
            "Description": "VPC Subnet AWS Gateway for port  ge-0/0/2",
            "Type": "String",
            "Default": "100.72.103.65"
        },
        "SGSubnet1": {
            "Description": "AN IP address range allowed in security to point towards the SDN Gateway on the private subnet",
            "Type": "String",
            "Default": "100.73.100.0/23"
        },
        "SGSubnet2": {
            "Description": "AN IP address range allowed in security to point towards the SDN Gateway on the private subnet. Leave it blank if you do not want it populated",
            "Type": "String",
            "Default": "notset"
        },
        "SGSubnet3": {
            "Description": "AN IP address range allowed in security to point towards the SDN Gateway on the private subnet. Leave it blank if you do not want it populated",
            "Type": "String",
            "Default": "notset"
        },
        "SGSubnet4": {
            "Description": "AN IP address range allowed in security to point towards the SDN Gateway on the private subnet. Leave it blank if you do not want it populated",
            "Type": "String",
            "Default": "notset"
        },
        "SiteName": {
            "Description": "Site Name",
            "Type": "String",
            "Default": "SDNGateway1"
        },
        "SSHEncryptedPassword": {
            "Description": "SSH Encrypted Password",
            "Type": "String",
            "Default": "$6$EJlAdXxd$qg4pMaAu4Pf9.Vxmz7Gpdypn1Uw2gzzMV17WEiqGqRXVfh5UbfZ4YFZNBC4XR56nhXzWoZdFiu2gPMeN6JEn3.",
            "NoEcho": true
        },
        "VPCCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for entire management control VPC.",
            "Default": "100.72.102.0/23",
            "Type": "String"
        },
        "VPCDOMAIN" : {
          "Description" : "VCP domain type",
          "Type" : "String",
          "Default": "default"
        },
        "PublicSubnetCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the public subnet",
            "Default": "100.72.102.192/26",
            "Type": "String"
        },
        "PrivateSubnetCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the private subnet AZ1",
            "Default": "100.72.102.0/26",
            "Type": "String"
        },
        "ContrailbgppeerIP": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "Description": "Contrail BGP Peer ip address x.x.x.x",
            "Default": "100.72.102.11",
            "Type": "String"
        },
        "ContrailbgpASN": {
            "Description": "Contrail BGP Peer ip address x.x.x.x",
            "Default": "64512",
            "Type": "String"
        },
        "ContrailDestinationNetwork": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "in the form x.x.x.x/xx",
            "Description": "Contrails underlay Network CIDR for BGP in the form x.x.x.x/xx",
            "Default": "172.30.0.0/16",
            "Type": "String"
        },
        "ContrailOverlayNetworks": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "in the form x.x.x.x/xx",
            "Description": "Contrails Overlay Networks Supernet in the form x.x.x.x/xx",
            "Default": "192.0.0.0/16",
            "Type": "String"
        }
    },
    "Mappings": {
        "AWSRegionArch2AMIR18PAYG": {
            "eu-central-1": { "VMXHVM": "ami-01d92771730e32cd9" },
            "ap-southeast-2": { "VMXHVM": "ami-06802f78db7a687f2" },
            "eu-west-1": { "VMXHVM": "ami-08d42f017ad3870f2" },
            "us-east-1": { "VMXHVM": "ami-0c27852fa00391f54" },
            "us-east-2": { "VMXHVM": "ami-05aa93d5f6932b707" },
            "us-west-2": { "VMXHVM": "ami-0e86bb4f89f845f0c" },
            "ap-northeast-1": { "VMXHVM": "ami-052d8f3d93bb0dcac" },
            "eu-west-2": { "VMXHVM": "ami-0346a364c86458dd9" },
            "eu-west-3": { "VMXHVM": "ami-01f0bd231424c5541" },
            "ap-southeast-1": { "VMXHVM": "ami-03cb7b2081381ea67" },
            "eu-north-1": { "VMXHVM": "ami-af62ead1" },
            "ap-south-1": { "VMXHVM": "ami-0676729a6c4bfae96" },
            "ap-northeast-2": { "VMXHVM": "ami-09aa2ca6605222c2a" },
            "sa-east-1": { "VMXHVM": "ami-0e40c323dd59d6b7f" }
        },
        "AWSRegionArch2AMIR19BYOL": {
            "eu-central-1": { "VMXHVM": "ami-0c909c0cb95ea516c" },
            "ap-southeast-2": { "VMXHVM": "ami-0a40f79fe18e8f533" },
            "eu-west-1": { "VMXHVM": "ami-0ad95096c95740994" },
            "us-east-1": { "VMXHVM": "ami-058765f5dec711ffa" },
            "us-east-2": { "VMXHVM": "ami-0ef9b8961acd0a1c8" },
            "us-west-2": { "VMXHVM": "ami-0781d045dc5b2d427" },
            "ap-northeast-1": { "VMXHVM": "ami-00f30a38d8a453af1" },
            "eu-west-2": { "VMXHVM": "ami-0c20283d59ade6460" },
            "eu-west-3": { "VMXHVM": "ami-037ebcc38ee13c894" },
            "ap-southeast-1": { "VMXHVM": "ami-0f35be28517f75e3e" },
            "eu-north-1": { "VMXHVM": "ami-0b3143844e6e605be" },
            "ap-south-1": { "VMXHVM": "ami-0643f4f6b95785ec9" },
            "ap-northeast-2": { "VMXHVM": "ami-0ca8ddbef790d121c" },
            "sa-east-1": { "VMXHVM": "ami-0cd239c3c7b78efe2" }
        },
        "AWSRegionArch2AMIBM": {
            "eu-central-1": { "HVM": "ami-0bad2b43a871348da" },
            "ap-southeast-2": { "HVM": "ami-07e22925f7bf77a0c" },
            "eu-west-1": { "HVM": "ami-0f2ed58082cb08a4d" },
            "us-east-1": { "HVM": "ami-039a49e70ea773ffc" },
            "us-east-2": { "HVM": "ami-03ffa9b61e8d2cfda" },
            "us-west-2": { "HVM": "ami-008c6427c8facbe08" },
            "ap-northeast-1": { "HVM": "ami-0196a6e6d6129f2c8" },
            "eu-west-2": { "HVM": "ami-0b1912235a9e70540" },
            "eu-west-3": { "HVM": "ami-0b1912235a9e70540" },
            "ap-southeast-1": { "HVM": "ami-01c54eee4ab8725c0" },
            "eu-north-1": { "HVM": "ami-0caae0b310f01ff33" },
            "ap-south-1": { "HVM": "ami-01b8d0884f38e37b4" },
            "ap-northeast-2": { "HVM": "ami-04e5ceec6723d7ec5" },
            "sa-east-1": { "HVM": "ami-0bb677666cd3fd188" }
        }
    },
    "Conditions": {
        "HasSGSubnet1": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "SGSubnet1" }, "notset"] }] },
        "HasSGSubnet2": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "SGSubnet2" }, "notset"] }] },
        "HasSGSubnet3": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "SGSubnet3" }, "notset"] }] },
        "HasSGSubnet4": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "SGSubnet4" }, "notset"] }] },
        "HasBareMetalSubnet1": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "BareMetalSubnet1" }, "notset"] }] },
        "HasDeployBareMetal1": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "DeployBareMetal1" }, "false"] }] },
        "HasBareMetalSubnet2": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "BareMetalSubnet2" }, "notset"] }] },
        "HasDeployBareMetal2": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "DeployBareMetal2" }, "false"] }] }
    },
    "Resources": {
        "VPC1": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR1"
                },
                "InstanceTenancy": { "Ref" : "VPCDOMAIN" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "Contrail", { "Ref" : "SiteName" } ] ] }
                    }
                ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone" : { "Ref" : "AvailabilityZone1" },
                "VpcId": { "Ref": "VPC1" },
                "CidrBlock": {
                    "Ref": "PublicSubnetCIDR1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "ContrailPublicSN1", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    }
                ]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone" : { "Ref" : "AvailabilityZone1" },
                "VpcId": { "Ref": "VPC1" },
                "CidrBlock": {
                    "Ref": "PrivateSubnetCIDR1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "ContrailPrivateSN1", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "ContrailInternetGW1", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": { "Ref": "VPC1" },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "NATEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "NAT": {
            "DependsOn": "AttachGateway",
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NATEIP",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "ContrailNATGW1", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    }
                ]
            }
        },
        "PrivateSubnetRouteTable1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "VPC1" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "ControllerPrivateRouteTable1", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    },
                    {
                        "Key": "CloudFormationStack",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "PrivateSubnetRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnetRouteTable1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NAT"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateSubnetRouteTable1"
                }
            }
        },
        "PublicRouteTable1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "VPC1" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "ContrailPubicSubnetRouteTable1", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    }
                ]
            }
        },
        "PublicRoute1": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable1"
                }
            }
        },
        "IPAddress1": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "SDNGWFXP0PUBLICIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "SecurityGroupSDNGW": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": { "Ref": "VPC1" },
                "GroupDescription": "Security group for the SDN Gateway, public and on internet",
                "GroupName": { "Fn::Join": [".", ["SDN_Gateway_public_SG", { "Ref": "SiteName" }, { "Ref": "AvailabilityZone1" }]] },
                "SecurityGroupIngress": [{
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": { "Ref": "UserLocation" },
                        "Description": "allow ssh access from the client"
                    }
                ],
                "SecurityGroupEgress": [{
                    "IpProtocol": "-1",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "0.0.0.0/0",
                    "Description": "allow all outbound traffic"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join": [".", ["SDN_Gateway_Security_Group", { "Ref": "SiteName" }, { "Ref": "AvailabilityZone1" }]] }
                }]
            }
        },
        "SgEntryGW01": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasSGSubnet1",
            "Properties": {
                "GroupId": { "Ref": "SecurityGroupSDNGW" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": { "Ref": "SGSubnet1" },
                "Description": "allow inbound traffic to the SDN Gateway from a specified subnet subnet1"
            }
        },
        "SgEntryGW02": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasSGSubnet2",
            "Properties": {
                "GroupId": { "Ref": "SecurityGroupSDNGW" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": { "Ref": "SGSubnet2" },
                "Description": "allow inbound traffic to the SDN Gateway from a specified subnet subnet2"
            }
        },
        "SgEntryGW03": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasSGSubnet3",
            "Properties": {
                "GroupId": { "Ref": "SecurityGroupSDNGW" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": { "Ref": "SGSubnet3" },
                "Description": "allow inbound traffic to the SDN Gateway from a specified subnet subnet3"
            }
        },
        "SgEntryGW04": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "HasSGSubnet4",
            "Properties": {
                "GroupId": { "Ref": "SecurityGroupSDNGW" },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": { "Ref": "SGSubnet4" },
                "Description": "allow inbound traffic to the SDN Gateway from a specified subnet subnet4"
            }
        },
        "SGIngressSecurityGroupSDNGW": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "SecurityGroupSDNGW"
                },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "SourceSecurityGroupId": {
                    "Ref": "SecurityGroupSDNGW"
                },
                "Description": "loopback rule"
            }
        },
        "BMRouteTable1": {
            "Type": "AWS::EC2::RouteTable",
            "Condition": "HasBareMetalSubnet1",
            "Properties": {
                "VpcId": { "Ref": "VPC1" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "BareMetalRouteTable1", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    },
                    {
                        "Key": "CloudFormationStack",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "BMRoute1": {
            "Type": "AWS::EC2::Route",
            "Condition": "HasBareMetalSubnet1",
            "Properties": {
                "RouteTableId": {
                    "Ref": "BMRouteTable1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NetworkInterfaceId": {
                    "Ref": "BareMetal1Interface"
                }
            }
        },
        "BMRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition": "HasBareMetalSubnet1",
            "Properties": {
                "SubnetId": {
                    "Ref": "BMSubnet1"
                },
                "RouteTableId": {
                    "Ref": "BMRouteTable1"
                }
            }
        },
        "BMSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Condition": "HasBareMetalSubnet1",
            "Properties": {
                "AvailabilityZone" : { "Ref" : "AvailabilityZone1" },
                "VpcId": { "Ref": "VPC1" },
                "CidrBlock": {
                    "Ref": "BareMetalSubnet1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "BareMetalSubnet1", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    }
                ]
            }
        },
        "BMRouteTable2": {
            "Type": "AWS::EC2::RouteTable",
            "Condition": "HasBareMetalSubnet2",
            "Properties": {
                "VpcId": { "Ref": "VPC1" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "BareMetalRouteTable2", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    },
                    {
                        "Key": "CloudFormationStack",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "BMRoute2": {
            "Type": "AWS::EC2::Route",
            "Condition": "HasBareMetalSubnet2",
            "Properties": {
                "RouteTableId": {
                    "Ref": "BMRouteTable2"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NetworkInterfaceId": {
                    "Ref": "BareMetal2Interface"
                }
            }
        },
        "BMRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition": "HasBareMetalSubnet2",
            "Properties": {
                "SubnetId": {
                    "Ref": "BMSubnet2"
                },
                "RouteTableId": {
                    "Ref": "BMRouteTable2"
                }
            }
        },
        "BMSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Condition": "HasBareMetalSubnet2",
            "Properties": {
                "AvailabilityZone" : { "Ref" : "AvailabilityZone1" },
                "VpcId": { "Ref": "VPC1" },
                "CidrBlock": {
                    "Ref": "BareMetalSubnet2"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "BareMetalSubnet2", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    }
                ]
            }
        },
        "SDNGatewayInstance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": ["Eth0SDNGateway", "SDNCPDPInterface"],
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone1" },
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                        "VolumeSize": "100"
                    }
                }],
                "ImageId": {
                    "Fn::FindInMap": ["AWSRegionArch2AMIR19BYOL", { "Ref": "AWS::Region"}, "VMXHVM"]
                },
                "InstanceType": {
                    "Ref": "SDNGatewayInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "NetworkInterfaces": [{
                        "NetworkInterfaceId": { "Ref": "Eth0SDNGateway" },
                        "DeviceIndex": "0"
                    },
                    {
                        "NetworkInterfaceId": { "Ref": "SDNCPDPInterface" },
                        "DeviceIndex": "1"
                    },
                    {
                        "NetworkInterfaceId": { "Ref": "BareMetal1Interface" },
                        "DeviceIndex": "2"
                    },
                    {
                        "NetworkInterfaceId": { "Ref": "BareMetal2Interface" },
                        "DeviceIndex": "3"
                    }
                ],
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join": [".", ["SDN_Gateway_Instance", { "Ref": "SiteName" }, { "Ref": "AvailabilityZone1" }]] }
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                 "#junos-config\n",
                                 "groups {\n",
                                 "    global {\n",
                                 "        system {\n",
                                 "            host-name HOSTNAME;\n",
                                 "            root-authentication {\n",
                                 "                encrypted-password \"$6$EJlAdXxd$qg4pMaAu4Pf9.Vxmz7Gpdypn1Uw2gzzMV17WEiqGqRXVfh5UbfZ4YFZNBC4XR56nhXzWoZdFiu2gPMeN6JEn3.\"; ## SECRET-DATA\n",
                                 "            }\n",
                                 "            login {\n",
                                 "                user jnpr {\n",
                                 "                    uid 2000;\n",
                                 "                    class super-user;\n",
                                 "                    authentication {\n",
                                 "                        ssh-rsa \"SSHRSAKEY\";\n", 
                                 "                        encrypted-password \"$6$EJlAdXxd$qg4pMaAu4Pf9.Vxmz7Gpdypn1Uw2gzzMV17WEiqGqRXVfh5UbfZ4YFZNBC4XR56nhXzWoZdFiu2gPMeN6JEn3.\"; ## SECRET-DATA\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            services {\n",
                                 "                ssh {\n",
                                 "                    root-login deny-password;\n",
                                 "                    max-sessions-per-connection 32;\n",
                                 "                    client-alive-interval 120;\n",
                                 "                }\n",
                                 "                netconf {\n",
                                 "                    ssh;\n",
                                 "                    traceoptions {\n",
                                 "                        file netconf-ops.log size 3m files 20 world-readable;\n",
                                 "                        flag all;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            syslog {\n",
                                 "                user * {\n",
                                 "                    any emergency;\n",
                                 "                }\n",
                                 "                file messages {\n",
                                 "                    any notice;\n",
                                 "                    authorization info;\n",
                                 "                }\n",
                                 "                file interactive-commands {\n",
                                 "                    interactive-commands any;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            ntp {\n",
                                 "                server 169.254.169.123;\n",
                                 "            }\n",
                                 "        }\n",
                                 "        chassis {\n",
                                 "            fpc 0 {\n",
                                 "                pic 0 {\n",
                                 "                    tunnel-services;\n",
                                 "                }\n",
                                 "                lite-mode;\n",
                                 "            }\n",
                                 "            network-services enhanced-ip;\n",
                                 "        }\n",
                                 "        interfaces {\n",
                                 "            fxp0 {\n",
                                 "                unit 0 {\n",
                                 "                    family inet {\n",
                                 "                        address ", { "Ref": "SDNGatewayFXP0PublicIP" }, "/", { "Ref": "SDNGatewayFXP0PublicIPSN" }, ";\n", 
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            lo0 {\n",
                                 "                unit 0;\n",
                                 "            }\n",
                                 "        }\n",
                                 "        routing-options {\n",
                                 "            static {\n",
                                 "                route 0.0.0.0/0 {\n",
                                 "                    next-hop GATEWAY;\n", 
                                 "                    retain;\n",
                                 "                    no-readvertise;\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __contrail_basic__ {\n",
                                 "        snmp {\n",
                                 "            community public {\n",
                                 "                authorization read-only;\n",
                                 "            }\n",
                                 "        }\n",
                                 "        policy-options {\n",
                                 "            policy-statement MAINTENANCE-MODE {\n",
                                 "                term term1 {\n",
                                 "                    from {\n",
                                 "                        family evpn;\n",
                                 "                        nlri-route-type [ 2 1 3 4 5 6 ];\n",
                                 "                    }\n",
                                 "                    then {\n",
                                 "                        community add COM-MAINTENANCE;\n",
                                 "                        accept;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "                term term100 {\n",
                                 "                    then accept;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            policy-statement REJECT-MAINTENANCE-MODE {\n",
                                 "                term term1 {\n",
                                 "                    from {\n",
                                 "                        family evpn;\n",
                                 "                        community COM-MAINTENANCE;\n",
                                 "                        nlri-route-type [ 2 1 3 4 5 6 ];\n",
                                 "                    }\n",
                                 "                    then reject;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            policy-statement MAINTENANCE-MODE-underlay {\n",
                                 "                then {\n",
                                 "                    as-path-prepend \"9999 9999 9999\";\n",
                                 "                    accept;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            community COM-MAINTENANCE members 9999:9999;\n",
                                 "        }\n",
                                 "        protocols {\n",
                                 "            l2-learning {\n",
                                 "                global-mac-table-aging-time 1800;\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __contrail_overlay_bgp__ {\n",
                                 "        policy-options {\n",
                                 "            policy-statement _contrail_ibgp_export_policy {\n",
                                 "                term inet-vpn {\n",
                                 "                    from family inet-vpn;\n",
                                 "                    then {\n",
                                 "                        next-hop self;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "                term inet6-vpn {\n",
                                 "                    from family inet6-vpn;\n",
                                 "                    then {\n",
                                 "                        next-hop self;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "        routing-options {\n",
                                 "            route-distinguisher-id ", { "Ref": "SDNGatewayLoopbackIP" }, ";\n",
                                 "            dynamic-tunnels {\n",
                                 "                _contrail_gre_tunnel {\n",
                                 "                    source-address ", { "Ref": "SDNGatewayLoopbackIP" }, ";\n",
                                 "                    gre;\n",
                                 "                    destination-networks {\n",
                                 "                        ", { "Ref": "ContrailDestinationNetwork" }, ";\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            resolution {\n",
                                 "                rib bgp.rtarget.0 {\n",
                                 "                    resolution-ribs inet.0;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            router-id ", { "Ref": "SDNGatewayLoopbackIP" }, ";\n",
                                 "            autonomous-system ", { "Ref": "ContrailbgpASN" }, " loops 2;\n",
                                 "        }\n",
                                 "        protocols {\n",
                                 "            bgp {\n",
                                 "                group _contrail_asn-", { "Ref": "ContrailbgpASN" }, " {\n",
                                 "                    type internal;\n",
                                 "                    local-address ", { "Ref": "SDNGatewayLoopbackIP" }, ";\n",
                                 "                    hold-time 90;\n",
                                 "                    family inet-vpn {\n",
                                 "                        unicast;\n",
                                 "                    }\n",
                                 "                    family inet6-vpn {\n",
                                 "                        unicast;\n",
                                 "                    }\n",
                                 "                    family evpn {\n",
                                 "                        signaling;\n",
                                 "                    }\n",
                                 "                    family route-target;\n",
                                 "                    export _contrail_ibgp_export_policy;\n",
                                 "                    cluster ", { "Ref": "SDNGatewayLoopbackIP" }, ";\n",
                                 "                    local-as ", { "Ref": "ContrailbgpASN" }, " loops 2;\n",
                                 "                    multipath;\n",
                                 "                    neighbor ", { "Ref": "ContrailbgppeerIP" }, " {\n",
                                 "                        peer-as ", { "Ref": "ContrailbgpASN" }, ";\n",
                                 "                    }\n",
                                 "                    vpn-apply-export;\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __contrail_overlay_evpn__ {\n",
                                 "        policy-options {\n",
                                 "            policy-statement EVPN-LB {\n",
                                 "                term term1 {\n",
                                 "                    from protocol evpn;\n",
                                 "                    then {\n",
                                 "                        load-balance per-packet;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            policy-statement _contrail_net1-l3-6-import {\n",
                                 "                term t1 {\n",
                                 "                    from community [ target_", { "Ref": "ContrailbgpASN" }, "_1001 target_", { "Ref": "ContrailbgpASN" }, "_8000006 ];\n",
                                 "                    then accept;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            policy-statement _contrail_net1-l3-6-export {\n",
                                 "                term t1 {\n",
                                 "                    then {\n",
                                 "                        community add target_", { "Ref": "ContrailbgpASN" }, "_1001;\n",
                                 "                        accept;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            policy-statement import-evpn {\n",
                                 "                term esi-in {\n",
                                 "                    from community community-esi-in;\n",
                                 "                    then accept;\n",
                                 "                }\n",
                                 "                term default-term {\n",
                                 "                    then reject;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            community target_", { "Ref": "ContrailbgpASN" }, "_1001 members target:", { "Ref": "ContrailbgpASN" }, ":1001;\n",
                                 "            community target_", { "Ref": "ContrailbgpASN" }, "_8000006 members target:", { "Ref": "ContrailbgpASN" }, ":8000006;\n",
                                 "            community community-esi-in members target:", { "Ref": "ContrailbgpASN" }, ":7999999;\n",
                                 "        }\n",
                                 "        routing-instances {\n",
                                 "            _contrail-l2 {\n",
                                 "                protocols {\n",
                                 "                    evpn {\n",
                                 "                        encapsulation vxlan;\n",
                                 "                        extended-vni-list all;\n",
                                 "                        default-gateway no-gateway-community;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "                vtep-source-interface lo0.0;\n",
                                 "                instance-type virtual-switch;\n",
                                 "                bridge-domains {\n",
                                 "                    bd-6 {\n",
                                 "                        vlan-id none;\n",
                                 "                        routing-interface irb.6;\n",
                                 "                        vxlan {\n",
                                 "                            vni 6;\n",
                                 "                        }\n",
                                 "                    }\n",
                                 "                }\n",
                                 "                route-distinguisher ", { "Ref": "SDNGatewayLoopbackIP" }, ":7999;\n",
                                 "                vrf-import [ import-evpn _contrail_net1-l2-6-import ];\n",
                                 "                vrf-target target:", { "Ref": "ContrailbgpASN" }, ":7999999;\n",
                                 "            }\n",
                                 "        }\n",
                                 "        routing-options {\n",
                                 "            forwarding-table {\n",
                                 "                export EVPN-LB;\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __contrail_overlay_evpn_gateway__ {\n",
                                 "        interfaces {\n",
                                 "            irb {\n",
                                 "                gratuitous-arp-reply;\n",
                                 "                unit 6 {\n",
                                 "                    proxy-macip-advertisement;\n",
                                 "                    virtual-gateway-accept-data;\n",
                                 "                    family inet {\n",
                                 "                        address 192.0.2.5/24 {\n",
                                 "                            preferred;\n",
                                 "                            virtual-gateway-address 192.0.2.1;\n",
                                 "                        }\n",
                                 "                    }\n",
                                 "                    virtual-gateway-v4-mac 00:00:5e:01:00:01;\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __contrail_overlay_evpn_type5__ {\n",
                                 "        policy-options {\n",
                                 "            policy-statement type5_policy {\n",
                                 "                term 1 {\n",
                                 "                    from protocol direct;\n",
                                 "                    then accept;\n",
                                 "                }\n",
                                 "                term 2 {\n",
                                 "                    from protocol static;\n",
                                 "                    then accept;\n",
                                 "                }\n",
                                 "                term 3 {\n",
                                 "                    from {\n",
                                 "                        protocol evpn;\n",
                                 "                        route-filter 0.0.0.0/0 prefix-length-range /32-/32;\n",
                                 "                    }\n",
                                 "                    then accept;\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "        routing-options {\n",
                                 "            forwarding-table {\n",
                                 "                chained-composite-next-hop {\n",
                                 "                    ingress {\n",
                                 "                        evpn;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __contrail_overlay_fip_snat__ {\n",
                                 "        interfaces {\n",
                                 "            irb {\n",
                                 "                gratuitous-arp-reply;\n",
                                 "            }\n",
                                 "        }\n",
                                 "        firewall {\n",
                                 "            family inet {\n",
                                 "                filter _contrail_redirect-to-public-vrfs-inet4 {\n",
                                 "                    term term-_contrail_net1-l3-6 {\n",
                                 "                        from {\n",
                                 "                            destination-address {\n",
                                 "                                192.0.2.0/24;\n",
                                 "                            }\n",
                                 "                        }\n",
                                 "                        then {\n",
                                 "                            routing-instance _contrail_net1-l3-6;\n",
                                 "                        }\n",
                                 "                    }\n",
                                 "                    term default-term {\n",
                                 "                        then accept;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __contrail_overlay_networking__ {\n",
                                 "        forwarding-options {\n",
                                 "            family inet {\n",
                                 "                filter {\n",
                                 "                    input redirect_to_public_vrf_filter;\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "        policy-options {\n",
                                 "            policy-statement _contrail_net1-l3-6-import {\n",
                                 "                then reject;\n",
                                 "            }\n",
                                 "        }\n",
                                 "        firewall {\n",
                                 "            family inet {\n",
                                 "                filter redirect_to_public_vrf_filter {\n",
                                 "                    term term-6 {\n",
                                 "                        from {\n",
                                 "                            destination-address {\n",
                                 "                                192.0.2.0/24;\n",
                                 "                            }\n",
                                 "                        }\n",
                                 "                        then {\n",
                                 "                            routing-instance _contrail_net1-l3-6;\n",
                                 "                        }\n",
                                 "                    }\n",
                                 "                    term default-term {\n",
                                 "                        then accept;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "        routing-instances {\n",
                                 "            _contrail_net1-l3-6 {\n",
                                 "                routing-options {\n",
                                 "                    static {\n",
                                 "                        route 192.0.2.0/24 discard;\n",
                                 "                        route 0.0.0.0/0 next-table inet.0;\n",
                                 "                    }\n",
                                 "                    auto-export {\n",
                                 "                        family inet {\n",
                                 "                            unicast;\n",
                                 "                        }\n",
                                 "                    }\n",
                                 "                }\n",
                                 "                instance-type vrf;\n",
                                 "                interface irb.6;\n",
                                 "                route-distinguisher ", { "Ref": "SDNGatewayLoopbackIP" }, ":30006;\n",
                                 "                vrf-import [ REJECT-MAINTENANCE-MODE _contrail_net1-l3-6-import ];\n",
                                 "                vrf-export _contrail_net1-l3-6-export;\n",
                                 "                vrf-target target:", { "Ref": "ContrailbgpASN" }, ":30006;\n",
                                 "                vrf-table-label;\n",
                                 "            }\n",
                                 "        }\n",
                                 "        routing-options {\n",
                                 "            static {\n",
                                 "                route 192.0.2.0/24 discard;\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __interfaces__ {\n",
                                 "        interfaces {\n",
                                 "            ge-0/0/0 {\n",
                                 "                unit 0 {\n",
                                 "                    family inet {\n",
                                 "                        address ", { "Ref": "SDNGatewayAZ1PrivateIPGE000" }, "/", { "Ref": "SDNGatewayAZ1PrivateIPGE000SN" }, ";\n", 
                                 "                    }\n",
                                 "                    family mpls;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            ge-0/0/1 {\n",
                                 "                unit 0 {\n",
                                 "                    family inet {\n",
                                 "                        address ", { "Ref": "SDNGatewayAZ1PrivateIPGE001" }, "/", { "Ref": "SDNGatewayAZ1PrivateIPGE001SN" }, ";\n", 
                                 "                    }\n",
                                 "                    family mpls;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            ge-0/0/2 {\n",
                                 "                unit 0 {\n",
                                 "                    family inet {\n",
                                 "                        address ", { "Ref": "SDNGatewayAZ1PrivateIPGE002" }, "/", { "Ref": "SDNGatewayAZ1PrivateIPGE002SN" }, ";\n", 
                                 "                    }\n",
                                 "                    family mpls;\n",
                                 "                }\n",
                                 "            }\n",
                                 "            lo0 {\n",
                                 "                unit 0 {\n",
                                 "                    family inet {\n",
                                 "                        address 127.0.0.1/32;\n",
                                 "                        address ", { "Ref": "SDNGatewayLoopbackIP" }, "/32 {\n", 
                                 "                            preferred;\n",
                                 "                        }\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __contrail_policy__ {\n",
                                 "        policy-options {\n",
                                 "            policy-statement _contrail_net1-l2-6-import {\n",
                                 "                term t1 {\n",
                                 "                    from community [ target_", { "Ref": "ContrailbgpASN" }, "_1001 target_", { "Ref": "ContrailbgpASN" }, "_1002 target_", { "Ref": "ContrailbgpASN" }, "_1003 ];\n",
                                 "                    then accept;\n",
                                 "                }\n",
                                 "                then reject;\n",
                                 "            }\n",
                                 "            policy-statement _contrail_net1-l2-6-export {\n",
                                 "                term t1 {\n",
                                 "                    then {\n",
                                 "                        community add target_", { "Ref": "ContrailbgpASN" }, "_1002;\n",
                                 "                        accept;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            policy-statement _contrail_net2-l2-7-import {\n",
                                 "                term t1 {\n",
                                 "                    from community [ target_", { "Ref": "ContrailbgpASN" }, "_1001 target_", { "Ref": "ContrailbgpASN" }, "_1002 target_", { "Ref": "ContrailbgpASN" }, "_1003 ];\n",
                                 "                    then accept;\n",
                                 "                }\n",
                                 "                then reject;\n",
                                 "            }\n",
                                 "            policy-statement _contrail_net2-l2-7-export {\n",
                                 "                term t1 {\n",
                                 "                    then {\n",
                                 "                        community add target_", { "Ref": "ContrailbgpASN" }, "_1002;\n",
                                 "                        accept;\n",
                                 "                    }\n",
                                 "                }\n",
                                 "            }\n",
                                 "            community target_", { "Ref": "ContrailbgpASN" }, "_1002 members target:", { "Ref": "ContrailbgpASN" }, ":1002;\n",
                                 "            community target_", { "Ref": "ContrailbgpASN" }, "_1001 members target:", { "Ref": "ContrailbgpASN" }, ":1001;\n",
                                 "            community target_", { "Ref": "ContrailbgpASN" }, "_8000001 members target:", { "Ref": "ContrailbgpASN" }, ":8000001;\n",
                                 "            community target_", { "Ref": "ContrailbgpASN" }, "_1003 members target:", { "Ref": "ContrailbgpASN" }, ":1003;\n",
                                 "        }\n",
                                 "    }\n",
                                 "    __ribgroup1__ {\n",
                                 "        policy-options {\n",
                                 "            prefix-list overlay {\n",
                                 "                ", { "Ref": "ContrailOverlayNetworks" }, ";\n",
                                 "            }\n",
                                 "            policy-statement leak-inet-to-vrf {\n",
                                 "                term 1 {\n",
                                 "                    from {\n",
                                 "                        protocol static;\n",
                                 "                        prefix-list overlay;\n",
                                 "                    }\n",
                                 "                    then accept;\n",
                                 "                }\n",
                                 "                term 2 {\n",
                                 "                    then reject;\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "        routing-options {\n",
                                 "            static {\n",
                                 "                route ", { "Ref": "ContrailDestinationNetwork" }, " next-hop ", { "Ref": "SDNGatewayAZ1PrivateIPGE000AWSGW" }, ";\n",
                                 "                route ", { "Ref": "BareMetalSubnet1" }, " next-hop ", { "Ref": "BareMetalGateway1" }, ";\n",
                                 "                rib-group inet-to-vrf;\n",
                                 "            }\n",
                                 "            rib-groups {\n",
                                 "                inet-to-vrf {\n",
                                 "                    import-rib [ inet.0 _contrail_net1-l3-6.inet.0 ];\n",
                                 "                    import-policy leak-inet-to-vrf;\n",
                                 "                }\n",
                                 "            }\n",
                                 "        }\n",
                                 "    }\n",
                                 "}\n",
                                 "apply-groups [ global __contrail_basic__ __contrail_overlay_bgp__ __contrail_overlay_evpn__ __contrail_overlay_evpn_gateway__ __contrail_overlay_evpn_type5__ __contrail_overlay_fip_snat__ __contrail_overlay_networking__ __interfaces__ __contrail_policy__ __ribgroup1__ ];\n",
                                 "#end of config\n"
                        ]
                    ]
                }
              }
            }
        },
        "Eth0SDNGateway" : {
          "Type" : "AWS::EC2::NetworkInterface",
          "Properties" : {
            "Description"     : "fxp0",
            "GroupSet"        : [ { "Ref" : "SecurityGroupSDNGW" } ],
            "PrivateIpAddress" : { "Ref" : "SDNGatewayFXP0PublicIP" },
            "SourceDestCheck" : "false",
            "SubnetId"        : { "Ref" : "PublicSubnet1" },
            "Tags"            : [ {"Key" : "Name", "Value" : "fxp0 Interface"}, {"Key" : "Interface", "Value" : "fxp0"} ]
          }
        },
        "SDNCPDPInterface" : {
          "Type" : "AWS::EC2::NetworkInterface",
          "Properties" : {
            "Description"     : "ge000",
            "GroupSet"        : [ { "Ref" : "SecurityGroupSDNGW" } ],
            "PrivateIpAddress" : { "Ref" : "SDNGatewayAZ1PrivateIPGE000" },
            "SourceDestCheck" : "false",
            "SubnetId"        : { "Ref" : "PrivateSubnet1" },
            "Tags"            : [ {"Key" : "Name", "Value" : "cpdp Interface"}, {"Key" : "Interface", "Value" : "ge000"} ]
            }
        },
        "BareMetal1Interface" : {
          "Type" : "AWS::EC2::NetworkInterface",
          "Properties" : {
            "Description"     : "ge001",
            "GroupSet"        : [ { "Ref" : "SecurityGroupSDNGW" } ],
            "PrivateIpAddress" : { "Ref" : "SDNGatewayAZ1PrivateIPGE001" },
            "SourceDestCheck" : "false",
            "SubnetId"        : { "Ref" : "BMSubnet1" },
            "Tags"            : [ {"Key" : "Name", "Value" : "Bare Metal Interface 1"}, {"Key" : "Interface", "Value" : "ge001"} ]
            }
        },
        "BareMetal2Interface" : {
          "Type" : "AWS::EC2::NetworkInterface",
          "Properties" : {
            "Description"     : "ge002",
            "GroupSet"        : [ { "Ref" : "SecurityGroupSDNGW" } ],
            "PrivateIpAddress" : { "Ref" : "SDNGatewayAZ1PrivateIPGE002" },
            "SourceDestCheck" : "false",
            "SubnetId"        : { "Ref" : "BMSubnet2" },
            "Tags"            : [ {"Key" : "Name", "Value" : "Bare Metal Interface 2"}, {"Key" : "Interface", "Value" : "ge002"} ]
            }
        },
        "BareMetalTestInstance1": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": ["BMSubnet1"],
            "Condition": "HasDeployBareMetal1",
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone1" },
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                        "VolumeSize": "10"
                    }
                }],
                "ImageId": {
                    "Fn::FindInMap": ["AWSRegionArch2AMIBM", { "Ref": "AWS::Region"}, "HVM"]
                },
                "InstanceType": {
                    "Ref": "BMInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SubnetId" : { "Ref" : "BMSubnet1" },
                "SourceDestCheck" : "false",
                "SecurityGroupIds" : [ { "Ref" : "SecurityGroupSDNGW" } ], 
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join": [".", ["BareMetalTestInstance1", { "Ref": "SiteName" }, { "Ref": "AvailabilityZone1" }]] }
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                 "#user data here\n",
                                 "#\n"
                        ]
                    ]
                }
              }
            }
        },
        "BareMetalTestInstance2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": ["BMSubnet2"],
            "Condition": "HasDeployBareMetal2",
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone1" },
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                        "VolumeSize": "10"
                    }
                }],
                "ImageId": {
                    "Fn::FindInMap": ["AWSRegionArch2AMIBM", { "Ref": "AWS::Region"}, "HVM"]
                },
                "InstanceType": {
                    "Ref": "BMInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SubnetId" : { "Ref" : "BMSubnet2" },
                "SourceDestCheck" : "false",
                "SecurityGroupIds" : [ { "Ref" : "SecurityGroupSDNGW" } ], 
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join": [".", ["BareMetalTestInstance2", { "Ref": "SiteName" }, { "Ref": "AvailabilityZone1" }]] }
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                 "#user data here\n",
                                 "#\n"
                        ]
                    ]
                }
              }
            }
        },
        "IPAssociaton1": {
            "Type": "AWS::EC2::EIPAssociation",
            "DependsOn": "SDNGatewayInstance",
            "Properties": {
                "NetworkInterfaceId" : { "Ref" : "Eth0SDNGateway" },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "SDNGWFXP0PUBLICIP",
                        "AllocationId"
                    ]
                }
            }
        },
        "PrivateSubnetRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnetRouteTable1"
                },
                "DestinationCidrBlock": { "Fn::Join": ["", ["", { "Ref": "SDNGatewayLoopbackIP" }, "/32"]] },
                "NetworkInterfaceId": {
                    "Ref": "SDNCPDPInterface"
                }
            }
        },
    },
    "Outputs": {
        "SDNGatewayFXP0PublicIP": {
            "Description": "SDN Gateway Public IP",
            "Value": {
                "Ref": "SDNGWFXP0PUBLICIP"
            }
        },
        "SDNGatewayFXP0PrivateIP": {
            "Description": "SDN Gateway FXP0 private (internal) IP",
            "Value": {
                "Ref": "SDNGatewayFXP0PublicIP"
            }
        },
        "SDNGatewayAZ1PrivateIPGE000": {
            "Description": "SDN Gateway WAN IP used by Contrail for control plane and data plane traffic",
            "Value": {
                "Ref": "SDNGatewayAZ1PrivateIPGE000"
            }
        },
        "SDNGatewayAZ1PrivateIPGE001": {
            "Description": "Bare Metal Subnet 1 Gateway IP",
            "Value": {
                "Ref": "SDNGatewayAZ1PrivateIPGE001"
            }
        },
        "SDNGatewayAZ1PrivateIPGE002": {
            "Description": "Bare Metal Subnet 2 Gateway IP",
            "Value": {
                "Ref": "SDNGatewayAZ1PrivateIPGE002"
            }
        },
        "SDNGatewayLoopback": {
            "Description": "SDN Gateway Loopback IP",
            "Value": {
                "Ref": "SDNGatewayLoopbackIP" 
            }
        },
        "BareMetalTestInstance1": {
            "Condition": "HasDeployBareMetal1",
            "Description": "IP Address for test bare metal instance 1",
            "Value": {
                "Fn::GetAtt": [
                    "BareMetalTestInstance1",
                    "PrivateIp"
                ]
              }
        },
        "BareMetalTestInstance2": {
            "Condition": "HasDeployBareMetal2",
            "Description": "IP Address for test bare metal instance 2",
            "Value": {
                "Fn::GetAtt": [
                    "BareMetalTestInstance2",
                    "PrivateIp"
                ]
              }
        },
        "SSHtoSDNGateway": {
            "Description": "SSH to vMX FXP0 command",
            "Value": { "Fn::Join": [ "", [ "   ssh -i [your ContrailKey1 private key file] jnpr@", {"Ref": "SDNGWFXP0PUBLICIP"}, "" ] ] }
        },
        "Hints": {
            "Description": "The first time you use the vMX your stack will fail. In the cloudformation stack events you will be prompted with a copy paste link, to accept the terms and conditions for the AMI",
            "Value": NA 
        }
    }
}
